{"version":3,"sources":["logo.svg","Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","questions","roll","chooseQuestions","bind","assertThisInitialized","handleClick","inherits","createClass","key","value","temp","questionArr","length","Math","floor","random","console","log","includes","push","setState","react_default","a","createElement","onClick","Component","App","className","Home_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gMCE3BC,EAAb,SAAAC,GAEC,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACfG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAEDQ,MAAQ,CACVC,UAAY,CAAC,+EACf,uFACA,oGACA,2GACA,8HACA,+FACA,6JACA,8KACA,kKACA,sJACA,qKACA,iJACA,oIACA,8HACHC,KAAQ,IAGPT,EAAKU,gBAAkBV,EAAKU,gBAAgBC,KAArBV,OAAAW,EAAA,EAAAX,CAAAD,IACvBA,EAAKa,YAAcb,EAAKa,YAAYF,KAAjBV,OAAAW,EAAA,EAAAX,CAAAD,IAtBHA,EAFpB,OAAAC,OAAAa,EAAA,EAAAb,CAAAJ,EAAAC,GAAAG,OAAAc,EAAA,EAAAd,CAAAJ,EAAA,EAAAmB,IAAA,cAAAC,MAAA,WA4BEd,KAAKO,oBA5BP,CAAAM,IAAA,kBAAAC,MAAA,WAqCE,IAJA,IACIC,EADAC,EAAY,GAITA,EAAYC,OAAO,GACzBF,EAAKG,KAAKC,MAAqB,GAAdD,KAAKE,SAAa,GACnCC,QAAQC,IAAI,cAAgBP,GACvBC,EAAYO,SAASR,IACzBC,EAAYQ,KAAKT,GAInBf,KAAKyB,SAAS,CACbnB,KAAMU,MA9CT,CAAAH,IAAA,oBAAAC,MAAA,WAmDEd,KAAKO,oBAnDP,CAAAM,IAAA,SAAAC,MAAA,WAuDE,OACCY,EAAAC,EAAAC,cAAA,WAECF,EAAAC,EAAAC,cAAA,SAAI5B,KAAKI,MAAMC,UAAUL,KAAKI,MAAME,KAAK,KACzCoB,EAAAC,EAAAC,cAAA,SAAI5B,KAAKI,MAAMC,UAAUL,KAAKI,MAAME,KAAK,KACzCoB,EAAAC,EAAAC,cAAA,SAAI5B,KAAKI,MAAMC,UAAUL,KAAKI,MAAME,KAAK,KACzCoB,EAAAC,EAAAC,cAAA,SAAI5B,KAAKI,MAAMC,UAAUL,KAAKI,MAAME,KAAK,KACzCoB,EAAAC,EAAAC,cAAA,SAAI5B,KAAKI,MAAMC,UAAUL,KAAKI,MAAME,KAAK,KAEzCoB,EAAAC,EAAAC,cAAA,UAAQC,QAAS7B,KAAKU,aAAtB,aAhEJhB,EAAA,CAA0BoC,aCWXC,MARf,WACE,OACEL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAACK,EAAD,QCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOd,EAAAC,EAAAC,cAACa,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9264660b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nexport class Home extends Component {\r\n\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\r\n\t    this.state = {\r\n\t      \tquestions: \t[\"What do you look like? What do I look like? Tell me 3 things for each of us.\",\r\n\t\t\t\t\t\t\"Have you ever ...been to Hong Kong? ...seen a bird? ...called a friend on the phone?\",\r\n\t\t\t\t\t\t\"How long have you lived in Shenzhen? How long have you been a student? Answer with for and since.\",\r\n\t\t\t\t\t\t\"What should you do for a sore throat? What should you do for a cold? Give two pieces of advice for each.\",\r\n\t\t\t\t\t\t\"What should you do if you’re homesick? What should you do if you’re stressed? Give two pieces of advice for each.\",\r\n\t\t\t\t\t\t\"I’m hungry...where do you want to go? Why do you want to go there? Give me two reasons.\",\r\n\t\t\t\t\t\t\"You are a very agreeable person. Agree with all of the following: I like Italian food...I can’t make a pizza... I am hungry... I don’t eat meat.\",\r\n\t\t\t\t\t\t\"You are a very disagreeable person. Disagree with all of the following: I don’t like noodles...I’m not a pizza lover...I can make a cake...I can’t make BBQ.\",\r\n\t\t\t\t\t\t\"Welcome to Red Robin. What would you like to order? Would you like some salad? What would you like to drink? Water, coke, or tea? Would you like anything else?\",\r\n\t\t\t\t\t\t\"Which country is more populous, China or USA? Where is the tallest mountain in the world, Russia, India, or Nepal? Answer with a complete sentence.\",\r\n\t\t\t\t\t\t\"How long is the Great Wall of China? How tall are you? How big is China? How far is Beijing from Shenzhen? You don’t need to remember the exact measurements.\",\r\n\t\t\t\t\t\t\"What are you doing tonight? Are you going to watch the football match this weekend? What are you doing now? What are you going to do tomorrow?\",\r\n\t\t\t\t\t\t\"The school year is almost over. A lot has changed. What have you been up to? What’s new with you? Tell me 3 or more changes.\",\r\n\t\t\t\t\t\t\"What are you going to do this summer? What do you hope to do after you graduate? What would you like to do with your life?\"],\r\n\t\t\troll: \t\t[]\r\n\t    };\r\n\t    \r\n\t   this.chooseQuestions = this.chooseQuestions.bind(this);\r\n\t   this.handleClick = this.handleClick.bind(this);\r\n\t}\t\r\n\r\n\thandleClick() {\r\n\t\tthis.chooseQuestions();\r\n\t}\r\n\r\n\t//Chooses 3 of the 9 die\r\n\tchooseQuestions() {\r\n\t\tlet questionArr=[];\r\n\t\tlet temp;\r\n\r\n\t\t//rolls for 3 random dice, no two the same\r\n\t\twhile (questionArr.length<5) {\r\n\t\t\ttemp=Math.floor((Math.random()*13)+1);\r\n\t\t\tconsole.log(\"i rolled a \" + temp);\r\n\t\t\tif (!questionArr.includes(temp)) {\r\n\t\t\t\tquestionArr.push(temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\troll: questionArr\r\n\t\t})\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.chooseQuestions();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\r\n\t\t\t\t<p>{this.state.questions[this.state.roll[0]]}</p>\r\n\t\t\t\t<p>{this.state.questions[this.state.roll[1]]}</p>\r\n\t\t\t\t<p>{this.state.questions[this.state.roll[2]]}</p>\r\n\t\t\t\t<p>{this.state.questions[this.state.roll[3]]}</p>\r\n\t\t\t\t<p>{this.state.questions[this.state.roll[4]]}</p>\r\n\r\n\t\t\t\t<button onClick={this.handleClick}>roll</button>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Home} from './Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}